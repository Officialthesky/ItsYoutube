{"ast":null,"code":"import _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Videoplayercontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../Header\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Videoplayercontainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var videoId = _ref.videoId;\n  var location = useLocation();\n  var videoInfo = location.state.id;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var fetchComments = function fetchComments() {\n    axios({\n      method: \"GET\",\n      // url: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchQuery}&maxResults=200&key=${API_KEY}`,\n      url: \"https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=\".concat(videoId, \"&key=\").concat(API_KEY),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      setComments(res.data.items);\n      console.log(res.data.items); //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  };\n\n  useEffect(function () {\n    fetchComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playingVideo\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        title: \"Youtube Video Play\",\n        width: \"980\",\n        height: \"500\",\n        frameBorder: \"0\",\n        allowFullScreen: true,\n        allow: \"autoplay\",\n        src: \"https://www.youtube.com/embed/\".concat(videoId)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoRow\",\n      children: comments.map(function (video, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.snippet.videoId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, _this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Videoplayercontainer, \"vUS0IybUSuSfa1lJlrchMuV/uHU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Videoplayercontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videoplayercontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Videoplayercontainer/index.js"],"names":["React","useEffect","useState","axios","API_KEY","useLocation","Videoplayercontainer","videoId","location","videoInfo","state","id","comments","setComments","fetchComments","method","url","headers","Accept","then","res","data","items","console","log","catch","error","map","video","index","snippet"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,eAAe,SAASC,oBAAT,OAA2C;AAAA;;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACxD,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,MAAMI,SAAS,GAAGD,QAAQ,CAACE,KAAT,CAAeC,EAAjC;;AAEA,kBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOU,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BX,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,KADJ;AAEJ;AACAC,MAAAA,GAAG,0FAAmFT,OAAnF,kBAAkGH,OAAlG,CAHC;AAIJa,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAJL,KAAD,CAAL,CASGC,IATH,CASQ,UAACC,GAAD,EAAS;AACbP,MAAAA,WAAW,CAACO,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACC,IAAJ,CAASC,KAArB,EAFa,CAGb;AACD,KAbH,EAcGG,KAdH,CAcS,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADgB,CAEhB;AACD,KAjBH;AAkBD,GAnBD;;AAqBAzB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,eACG,GADH,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAC,oBADR;AAEE,QAAA,KAAK,EAAC,KAFR;AAGE,QAAA,MAAM,EAAC,KAHT;AAIE,QAAA,WAAW,EAAC,GAJd;AAKE,QAAA,eAAe,MALjB;AAME,QAAA,KAAK,EAAC,UANR;AAOE,QAAA,GAAG,0CAAmCP,OAAnC;AAPL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGK,QAAQ,CAACe,GAAT,CAAa,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC9B,4BACE;AAAA,iCACE;AAAA,sBAAID,KAAK,CAACE,OAAN,CAAcvB;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUsB,KAAV;AAAA;AAAA;AAAA;AAAA,iBADF;AAKD,OANA;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AAyBD;;GAvDuBvB,oB;UACLD,W;;;KADKC,oB","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../Header\";\nimport { useLocation } from \"react-router-dom\";\n\n\nexport default function Videoplayercontainer({ videoId }) {\n  const location = useLocation();\n  const videoInfo = location.state.id;\n\n  const [comments, setComments] = useState([]);\n  const fetchComments = () => {\n    axios({\n      method: \"GET\",\n      // url: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchQuery}&maxResults=200&key=${API_KEY}`,\n      url: `https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=${videoId}&key=${API_KEY}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        setComments(res.data.items);\n        console.log(res.data.items);\n        //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      })\n      .catch((error) => {\n        console.log(error);\n        // alert(error.response.data.error.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  return (\n    <>\n      {\" \"}\n      <div className=\"playingVideo\">\n        <iframe\n          title=\"Youtube Video Play\"\n          width=\"980\"\n          height=\"500\"\n          frameBorder=\"0\"\n          allowFullScreen\n          allow=\"autoplay\"\n          src={`https://www.youtube.com/embed/${videoId}`}\n        ></iframe>\n      </div>\n      <div className=\"videoRow\">\n        {comments.map((video, index) => {\n          return (\n            <div key={index}>\n              <p>{video.snippet.videoId}</p>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}