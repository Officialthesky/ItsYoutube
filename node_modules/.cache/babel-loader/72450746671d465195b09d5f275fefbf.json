{"ast":null,"code":"import _toConsumableArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Videoplayercontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../../Key\";\nimport \"./index.css\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videoplayercontainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var videoId = _ref.videoId,\n      videoInfo = _ref.videoInfo;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1]; //nextpagetoken used for  storing next page results \n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nextPageToken = _useState4[0],\n      setNextPageToken = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadMore = _useState6[0],\n      setLoadMore = _useState6[1];\n\n  var fetchComments = function fetchComments() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=\".concat(videoId, \"&key=\").concat(API_KEY),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      setComments(res.data.items);\n      setNextPageToken(res.data.nextPageToken);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var fetchMoreComments = function fetchMoreComments() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=\".concat(videoId, \"&key=\").concat(API_KEY, \"&pageToken=\").concat(nextPageToken),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      // Here undefined means there is no next page results \n      if (res.data.nextPageToken === undefined) {\n        setLoadMore(false);\n      }\n\n      var updateComments = [].concat(_toConsumableArray(comments), _toConsumableArray(res.data.items)); //Very Important this is,we call it spread operator\n      //used for adding two arrays only\n\n      setComments(updateComments);\n      setNextPageToken(res.data.nextPageToken);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      recommendVideo = _useState8[0],\n      setRecommendVideo = _useState8[1];\n\n  var fetchRecommendVideos = function fetchRecommendVideos() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/search?part=snippet&type=video&relatedToVideoId=\".concat(videoId, \"&videoType=any&maxResults=50&key=\").concat(API_KEY, \"&videoId=\").concat(videoId),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      setRecommendVideo(res.data.items); //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  };\n\n  var navigate = useNavigate();\n\n  var navigateToPlayThisVideo = function navigateToPlayThisVideo(video) {\n    navigate(\"/player/\".concat(video.id.videoId), {\n      state: {\n        isSearch: true,\n        video: video\n      }\n    });\n  };\n\n  useEffect(function () {\n    fetchComments();\n    fetchRecommendVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoPlayerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchAndCommentsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playingVideo\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"Youtube Video Play\",\n          width: \"980\",\n          height: \"500\",\n          frameBorder: \"0\",\n          allowFullScreen: true,\n          allow: \"autoplay\",\n          src: \"https://www.youtube.com/embed/\".concat(videoId, \"?autoplay=1\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playingVideoInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"playingVideoTitle\",\n            children: videoInfo.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentsColumn\",\n        children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: comments.length //This is important field to render the next data\n          ,\n          next: fetchMoreComments,\n          hasMore: loadMore,\n          loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this),\n          endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"No more comments found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this),\n          children: comments.map(function (video, index) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"authorNameAndCommentAndProfileImage\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"authorProfileImage\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: video.snippet.topLevelComment.snippet.authorProfileImageUrl,\n                  alt: video.snippet.topLevelComment.snippet.authorDisplayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"authorNameAndCommentAndLikes\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"authorDisplayName\",\n                  children: video.snippet.topLevelComment.snippet.authorDisplayName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"comment\",\n                  children: video.snippet.topLevelComment.snippet.textOriginal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"likeOnCounts\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"likeCount\",\n                    children: [/*#__PURE__*/_jsxDEV(AiOutlineLike, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 25\n                    }, _this), \" \", video.snippet.topLevelComment.snippet.likeCount]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendVideosContainer\",\n      children: recommendVideo.map(function (video, index) {\n        var _video$snippet, _video$snippet2, _video$snippet3;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendVideosDisplay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendedVideoThumbnail\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : _video$snippet.thumbnails.medium.url,\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendedVideoInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: (_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : _video$snippet2.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"channelName\",\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video);\n              },\n              children: (_video$snippet3 = video.snippet) === null || _video$snippet3 === void 0 ? void 0 : _video$snippet3.channelTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Videoplayercontainer, \"WjkC76UVew/OGHOBxuj6ecn9CDc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Videoplayercontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videoplayercontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Videoplayercontainer/index.js"],"names":["React","useEffect","useState","axios","API_KEY","AiOutlineLike","useNavigate","InfiniteScroll","Videoplayercontainer","videoId","videoInfo","comments","setComments","nextPageToken","setNextPageToken","loadMore","setLoadMore","fetchComments","method","url","headers","Accept","then","res","data","items","catch","error","console","log","fetchMoreComments","undefined","updateComments","recommendVideo","setRecommendVideo","fetchRecommendVideos","navigate","navigateToPlayThisVideo","video","id","state","isSearch","snippet","title","length","textAlign","map","index","topLevelComment","authorProfileImageUrl","authorDisplayName","textOriginal","likeCount","thumbnails","medium","channelTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../../Key\";\n\nimport \"./index.css\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nexport default function Videoplayercontainer({ videoId, videoInfo }) {\n  const [comments, setComments] = useState([]);\n  //nextpagetoken used for  storing next page results \n  const [nextPageToken, setNextPageToken] = useState(\"\");\n  const [loadMore, setLoadMore] = useState(true);\n\n  const fetchComments = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=${videoId}&key=${API_KEY}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        setComments(res.data.items);\n        setNextPageToken(res.data.nextPageToken);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const fetchMoreComments = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=${videoId}&key=${API_KEY}&pageToken=${nextPageToken}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        // Here undefined means there is no next page results \n        if (res.data.nextPageToken === undefined) {\n          setLoadMore(false);\n        }\n        const updateComments = [...comments, ...res.data.items]; //Very Important this is,we call it spread operator\n        //used for adding two arrays only\n        setComments(updateComments);\n        setNextPageToken(res.data.nextPageToken);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const [recommendVideo, setRecommendVideo] = useState([]);\n  const fetchRecommendVideos = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&type=video&relatedToVideoId=${videoId}&videoType=any&maxResults=50&key=${API_KEY}&videoId=${videoId}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        setRecommendVideo(res.data.items);\n        //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      })\n      .catch((error) => {\n        console.log(error);\n        // alert(error.response.data.error.message);\n      });\n  };\n\n  const navigate = useNavigate();\n\n  const navigateToPlayThisVideo = (video) => {\n    navigate(`/player/${video.id.videoId}`, {\n      state: {\n        isSearch: true,\n        video,\n      },\n    });\n  };\n\n  useEffect(() => {\n    fetchComments();\n    fetchRecommendVideos();\n  }, []);\n\n  return (\n    <div className=\"videoPlayerContainer\">\n      <div className=\"watchAndCommentsContainer\">\n        <div className=\"playingVideo\">\n          <iframe\n            title=\"Youtube Video Play\"\n            width=\"980\"\n            height=\"500\"\n            frameBorder=\"0\"\n            allowFullScreen\n            allow=\"autoplay\"\n            src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\n          ></iframe>\n          <div className=\"playingVideoInfo\">\n            <h6 className=\"playingVideoTitle\">{videoInfo.snippet.title}</h6>\n          </div>\n          <hr></hr>\n        </div>\n\n        <div className=\"commentsColumn\">\n          <InfiniteScroll\n            dataLength={comments.length} //This is important field to render the next data\n            next={fetchMoreComments}\n            hasMore={loadMore}\n            loader={<h4>Loading...</h4>}\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>No more comments found</b>\n              </p>\n            }\n          >\n            {comments.map((video, index) => {\n              return (\n                <div\n                  key={index}\n                  className=\"authorNameAndCommentAndProfileImage\"\n                >\n                  <div className=\"authorProfileImage\">\n                    <img\n                      src={\n                        video.snippet.topLevelComment.snippet\n                          .authorProfileImageUrl\n                      }\n                      alt={\n                        video.snippet.topLevelComment.snippet.authorDisplayName\n                      }\n                    />\n                  </div>\n                  <div className=\"authorNameAndCommentAndLikes\">\n                    <h6 className=\"authorDisplayName\">\n                      {video.snippet.topLevelComment.snippet.authorDisplayName}\n                    </h6>\n\n                    <p className=\"comment\">\n                      {video.snippet.topLevelComment.snippet.textOriginal}\n                    </p>\n                    <div className=\"likeOnCounts\">\n                      <p className=\"likeCount\">\n                        <AiOutlineLike />{\" \"}\n                        {video.snippet.topLevelComment.snippet.likeCount}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </InfiniteScroll>\n\n          {/* <div\n            onClick={fetchMoreComments}\n            style={{ width: \"100%\", height: 40, backgroundColor: \"red\" }}\n          >\n            Load more comments\n          </div> */}\n        </div>\n      </div>\n      <div className=\"recommendVideosContainer\">\n        {recommendVideo.map((video, index) => {\n          return (\n            <div key={index} className=\"recommendVideosDisplay\">\n              <div className=\"recommendedVideoThumbnail\">\n                <img\n                  src={video.snippet?.thumbnails.medium.url}\n                  onClick={() => navigateToPlayThisVideo(video)}\n                />\n                {/* (why question mark used ?) (ternary operator) snippet will check if there is thumbnail then go further otherwise don't show error show blank */}\n              </div>\n              <div className=\"recommendedVideoInfo\">\n                <h6>{video.snippet?.title}</h6>\n                <p\n                  className=\"channelName\"\n                  onClick={() => navigateToPlayThisVideo(video)}\n                >\n                  {video.snippet?.channelTitle}\n                </p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}