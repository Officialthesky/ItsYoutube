{"ast":null,"code":"import _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport { API_KEY } from \"../Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mainvideocontainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var selectedTag = _ref.selectedTag;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myFilteredData = _useState2[0],\n      setMyFilteredData = _useState2[1];\n\n  var fetchVideosFromLocalStorage = JSON.parse(localStorage.getItem(\"videos\")); // console.log(fetchVideosFromLocalStorage);\n\n  useEffect(function () {\n    // const fltData = videoPlayerInfo.filter(\n    //   (item, index) => item?.tag === selectedTag?.toLowerCase()\n    // );\n    // if (selectedTag === \"all\") {\n    //   setMyFilteredData(videoPlayerInfo);\n    // } else {\n    //   setMyFilteredData(fltData);\n    // }\n    setMyFilteredData(fetchVideosFromLocalStorage);\n  }, [fetchVideosFromLocalStorage]);\n  var navigate = useNavigate();\n\n  var navigateToPlayThisVideo = function navigateToPlayThisVideo(video) {\n    navigate('/player/${video.id.videoId}', {\n      state: {\n        video: video\n      }\n    });\n    navigate(\"/player/\".concat(video.id.videoId), {\n      state: {\n        item: item\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainVideoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoRow\",\n      children: myFilteredData === null || myFilteredData === void 0 ? void 0 : myFilteredData.map(function (video, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videoPlayer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.snippet.thumbnails.medium.url,\n              alt: video.snippet.title,\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"channelLogoAndInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelLogo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.snippet.thumbnails.medium.url,\n                alt: video.snippet.channelTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelDescription\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: function onClick() {\n                    return navigateToPlayThisVideo(video);\n                  },\n                  children: video.snippet.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelName\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: video.snippet.channelTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"viewsAndUploadTime\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" . \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"uploadTime\",\n                  children: video.Uploadtime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mainvideocontainer, \"MB+A3nWEVrb8QwjL2Y5kYAPoew0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Mainvideocontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainvideocontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js"],"names":["React","useState","useEffect","useNavigate","axios","API_KEY","Mainvideocontainer","selectedTag","myFilteredData","setMyFilteredData","fetchVideosFromLocalStorage","JSON","parse","localStorage","getItem","navigate","navigateToPlayThisVideo","video","state","id","videoId","item","map","index","snippet","thumbnails","medium","url","title","channelTitle","Uploadtime"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { API_KEY } from \"../Header\";\r\n\r\nexport default function Mainvideocontainer({ selectedTag }) {\r\n  const [myFilteredData, setMyFilteredData] = useState([]);\r\n\r\n  const fetchVideosFromLocalStorage = JSON.parse(\r\n    localStorage.getItem(\"videos\")\r\n  );\r\n  // console.log(fetchVideosFromLocalStorage);\r\n  useEffect(() => {\r\n    // const fltData = videoPlayerInfo.filter(\r\n    //   (item, index) => item?.tag === selectedTag?.toLowerCase()\r\n    // );\r\n    // if (selectedTag === \"all\") {\r\n    //   setMyFilteredData(videoPlayerInfo);\r\n    // } else {\r\n    //   setMyFilteredData(fltData);\r\n    // }\r\n\r\n    setMyFilteredData(fetchVideosFromLocalStorage);\r\n  }, [fetchVideosFromLocalStorage]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n \r\n\r\n  const navigateToPlayThisVideo = (video) => {\r\n    navigate('/player/${video.id.videoId}',{\r\n      state:{\r\n        video,\r\n      }\r\n    });\r\n    navigate(`/player/${video.id.videoId}`, {\r\n      state: {\r\n        item,\r\n      },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainVideoContainer\">\r\n      <hr></hr>\r\n      <div className=\"videoRow\">\r\n        {myFilteredData?.map((video, index) => {\r\n          return (\r\n            <div className=\"videoInfo\" key={index}>\r\n              <div className=\"videoPlayer\" >\r\n                <img\r\n                  src={video.snippet.thumbnails.medium.url}\r\n                  alt={video.snippet.title}\r\n                  onClick={()=>navigateToPlayThisVideo(video)}\r\n                />\r\n              </div>\r\n              <div className=\"channelLogoAndInfo\">\r\n                <div className=\"channelLogo\">\r\n                <img\r\n                  src={video.snippet.thumbnails.medium.url}\r\n                  alt={video.snippet.channelTitle}\r\n                />\r\n                </div>\r\n                <div className=\"channelInfo\">\r\n                  <div className=\"channelDescription\" >\r\n                    <p onClick={()=>navigateToPlayThisVideo(video)}>{video.snippet.title}</p>\r\n                  </div>\r\n                  <div className=\"channelName\">\r\n                    <p>{video.snippet.channelTitle}</p>\r\n                  </div>\r\n                  <div className=\"viewsAndUploadTime\">\r\n                    {/* <p className=\"views\">{video.statistics.viewCount}</p> */}\r\n                    <span> . </span>\r\n                    <p className=\"uploadTime\">{video.Uploadtime}</p>\r\n                  </div>\r\n                  {/* <p style={{ color: \"red\" }}>{video.tag}</p> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}