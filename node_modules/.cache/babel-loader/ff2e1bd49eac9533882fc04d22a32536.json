{"ast":null,"code":"var _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Searchcontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Searchcontainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var data = _ref.data;\n  //data as a props\n  var navigate = useNavigate();\n\n  var navigateToPlayThisVideo = function navigateToPlayThisVideo(id) {\n    // navigate(`/player/${id}`);\n    console.log(id);\n    navigate('/player/${id}', {\n      state: {\n        id: id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchVideoContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchideoRow\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), data.map(function (video, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoInformation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videoThumbnail\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.snippet.thumbnails.medium.url,\n              alt: video.snippet.title,\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video.id);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LogoAndInfoOfChannel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videoTitle\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: function onClick() {\n                  return navigateToPlayThisVideo(video.id);\n                },\n                children: video.snippet.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"viewsAndUploadTimeOfVideo\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" . \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"uploadTime\",\n                children: video.Uploadtime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelLogoAndName\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelLogo\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: video.snippet.thumbnails.medium.url,\n                  alt: video.snippet.channelTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelName\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: video.snippet.channelTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"videoDescription\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: video.snippet.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Searchcontainer, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Searchcontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchcontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Searchcontainer/index.js"],"names":["React","useState","useNavigate","Searchcontainer","data","navigate","navigateToPlayThisVideo","id","console","log","state","map","video","index","snippet","thumbnails","medium","url","title","Uploadtime","channelTitle","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function Searchcontainer({ data}) {\n  //data as a props\n  const navigate = useNavigate();\n\n\n  const navigateToPlayThisVideo = (id) => {\n    // navigate(`/player/${id}`);\n    console.log(id);\n    navigate('/player/${id}',{\n      state:{\n        id\n      }\n    });\n  };\n\n  return (\n    <div className=\"searchVideoContainer\">\n      <div className=\"searchideoRow\">\n        <hr></hr>\n        {/* //same data we have to map because we have to show this on search container  */}\n        {data.map((video, index) => {\n          return (\n            <div className=\"videoInformation\" key={index}>\n              <div className=\"videoThumbnail\">\n                <img\n                  src={video.snippet.thumbnails.medium.url}\n                  alt={video.snippet.title}\n                  onClick={() => navigateToPlayThisVideo(video.id)}\n                />\n              </div>\n              <div className=\"LogoAndInfoOfChannel\">\n                <div className=\"videoTitle\">\n                  <p onClick={() => navigateToPlayThisVideo(video.id)}>\n                    {video.snippet.title}\n                  </p>\n                </div>\n\n                <div className=\"viewsAndUploadTimeOfVideo\">\n                  {/* <p className=\"views\">{video.statistics.viewCount}</p> */}\n                  <span> . </span>\n                  <p className=\"uploadTime\">{video.Uploadtime}</p>\n                </div>\n\n                <div className=\"channelLogoAndName\">\n                  <div className=\"channelLogo\">\n                    <img\n                      src={video.snippet.thumbnails.medium.url}\n                      alt={video.snippet.channelTitle}\n                    />\n                  </div>\n                  <div className=\"channelName\">\n                    <p>{video.snippet.channelTitle}</p>\n                  </div>\n                </div>\n                <div className=\"videoDescription\">\n                  <p>{video.snippet.description}</p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}