{"ast":null,"code":"import _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mainvideocontainer() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myFilteredData = _useState2[0],\n      setMyFilteredData = _useState2[1]; // useEffect(() => {\n  //   const fetchVideosInstart = () => {\n  //     axios({\n  //       method: \"GET\",\n  //       url: `https://youtube.googleapis.com/youtube/v3/videos?q=${searchQuery}&part=snippet&maxResults=200&regionCode=IN&chart=mostPopular&key=${API_KEY}`,\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json; charset=UTF-8\",\n  //       },\n  //     })\n  //       .then((res) => {\n  //         console.log(\"mydata\",res.data);\n  //         localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n  //       })\n  //       .catch((error) => {\n  //         console.log(error);\n  //         // alert(error.response.data.error.message);\n  //       });\n  //   };\n  //   fetchVideosInstart();\n  // }, []);\n\n\n  var fetchVideosFromLocalStorage = JSON.parse(localStorage.getItem(\"videos\"));\n  useEffect(function () {\n    setMyFilteredData(fetchVideosFromLocalStorage);\n  }, [fetchVideosFromLocalStorage]);\n  var navigate = useNavigate();\n\n  var navigateToPlayThisVideo = function navigateToPlayThisVideo(video) {\n    navigate(\"/player/\".concat(video.id), {\n      state: {\n        isSearch: false,\n        video: video\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainVideoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoRow\",\n      children: myFilteredData === null || myFilteredData === void 0 ? void 0 : myFilteredData.map(function (video, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videoPlayer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.snippet.thumbnails.medium.url,\n              alt: video.snippet.title,\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video);\n              } // we need whole thing about video so passing video \n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"channelLogoAndInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelLogo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.snippet.thumbnails.medium.url,\n                alt: video.snippet.channelTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelDescription\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: function onClick() {\n                    return navigateToPlayThisVideo(video);\n                  },\n                  children: video.snippet.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelName\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: video.snippet.channelTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"viewsAndUploadTime\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" . \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mainvideocontainer, \"MB+A3nWEVrb8QwjL2Y5kYAPoew0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Mainvideocontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainvideocontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js"],"names":["React","useState","useEffect","useNavigate","axios","Mainvideocontainer","myFilteredData","setMyFilteredData","fetchVideosFromLocalStorage","JSON","parse","localStorage","getItem","navigate","navigateToPlayThisVideo","video","id","state","isSearch","map","index","snippet","thumbnails","medium","url","title","channelTitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Mainvideocontainer() {\r\n  const [myFilteredData, setMyFilteredData] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchVideosInstart = () => {\r\n  //     axios({\r\n  //       method: \"GET\",\r\n  //       url: `https://youtube.googleapis.com/youtube/v3/videos?q=${searchQuery}&part=snippet&maxResults=200&regionCode=IN&chart=mostPopular&key=${API_KEY}`,\r\n  //       headers: {\r\n  //         Accept: \"application/json\",\r\n  //         \"Content-Type\": \"application/json; charset=UTF-8\",\r\n  //       },\r\n  //     })\r\n  //       .then((res) => {\r\n  //         console.log(\"mydata\",res.data);\r\n  //         localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\r\n\r\n          \r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //         // alert(error.response.data.error.message);\r\n  //       });\r\n  //   };\r\n  //   fetchVideosInstart();\r\n  // }, []);\r\n\r\n  const fetchVideosFromLocalStorage = JSON.parse(\r\n    localStorage.getItem(\"videos\")\r\n  );\r\n  \r\n  useEffect(() => {\r\n    setMyFilteredData(fetchVideosFromLocalStorage);\r\n  }, [fetchVideosFromLocalStorage]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToPlayThisVideo = (video) => {\r\n    navigate(`/player/${video.id}`,{\r\n      state:{\r\n        isSearch:false,\r\n        video\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainVideoContainer\">\r\n      <hr></hr>\r\n      <div className=\"videoRow\">\r\n        {myFilteredData?.map((video, index) => {\r\n          return (\r\n            <div className=\"videoInfo\" key={index}>\r\n              <div className=\"videoPlayer\">\r\n                <img\r\n                  src={video.snippet.thumbnails.medium.url}\r\n                  alt={video.snippet.title}\r\n                  onClick={() => navigateToPlayThisVideo(video)}\r\n                  // we need whole thing about video so passing video \r\n                />\r\n              </div>\r\n              <div className=\"channelLogoAndInfo\">\r\n                <div className=\"channelLogo\">\r\n                  <img\r\n                    src={video.snippet.thumbnails.medium.url}\r\n                    alt={video.snippet.channelTitle}\r\n                  />\r\n                </div>\r\n                <div className=\"channelInfo\">\r\n                  <div className=\"channelDescription\">\r\n                    <p onClick={() => navigateToPlayThisVideo(video)}>\r\n                      {video.snippet.title}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"channelName\">\r\n                    <p>{video.snippet.channelTitle}</p>\r\n                  </div>\r\n                  <div className=\"viewsAndUploadTime\">\r\n                    {/* <p className=\"views\">{video.snippet.videoId}</p> */}\r\n                    <span> . </span>\r\n                    {/* <p className=\"uploadTime\">{video.snippet.videoId}</p> */}\r\n                  </div>\r\n                  {/* <p style={{ color: \"red\" }}>{video.tag}</p> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}