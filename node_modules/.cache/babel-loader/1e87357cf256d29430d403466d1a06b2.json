{"ast":null,"code":"import _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../Components/Header\";\nimport Searchcontainer from \"../Components/Searchcontainer\";\nimport SideheaderandContainer from \"../Components/SideheaderandContainer\";\nimport axios from \"axios\"; // export const API_KEY = \"AIzaSyAxKOdWEkF7FPBZUSumtCTjbjHQxhwesYc\";\n\nimport { API_KEY } from \"../Components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(_ref) {\n  _s();\n\n  var videoId = _ref.videoId;\n  var location = useLocation(); //returns the location to any component\n  //To get the second argument we pass with useNavigate\n\n  var searchQuery = location.state.searchQuery;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; //data we get after search\n\n\n  var fetchSearchVideos = function fetchSearchVideos() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=\".concat(searchQuery, \"&videoId=\").concat(videoId, \"&maxResults=200&key=\").concat(API_KEY),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      setData(res.data.items);\n      console.log(res.data.items); //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  };\n\n  useEffect(function () {\n    fetchSearchVideos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideheaderandContainer, {\n      hideContainer: true,\n      hideSearchcontainer: false,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"D4gzE808Pvu6kELzzy1SZRZILNU=\", false, function () {\n  return [useLocation];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Pages/Search.js"],"names":["React","useEffect","useState","useLocation","Header","Searchcontainer","SideheaderandContainer","axios","API_KEY","Search","videoId","location","searchQuery","state","data","setData","fetchSearchVideos","method","url","headers","Accept","then","res","items","console","log","catch","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,sBAAP,MAAmC,sCAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,eAAe,SAASC,MAAT,OAA2B;AAAA;;AAAA,MAAVC,OAAU,QAAVA,OAAU;AACxC,MAAMC,QAAQ,GAAGR,WAAW,EAA5B,CADwC,CAExC;AACA;;AACA,MAAMS,WAAW,GAAGD,QAAQ,CAACE,KAAT,CAAeD,WAAnC;;AAEA,kBAAwBV,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb,iBANwC,CAMF;;;AAIxC,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC5BT,IAAAA,KAAK,CAAC;AACJU,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,4EAAqEN,WAArE,sBAA4FF,OAA5F,iCAA0HF,OAA1H,CAFC;AAGJW,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAHL,KAAD,CAAL,CAQGC,IARH,CAQQ,UAACC,GAAD,EAAS;AACbP,MAAAA,OAAO,CAACO,GAAG,CAACR,IAAJ,CAASS,KAAV,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACR,IAAJ,CAASS,KAArB,EAFa,CAGb;AACD,KAZH,EAaGG,KAbH,CAaS,UAACC,KAAD,EAAW;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EADgB,CAEhB;AACD,KAhBH;AAiBD,GAlBH;;AAoBE1B,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,sBAAD;AAAyB,MAAA,aAAa,EAAE,IAAxC;AAA8C,MAAA,mBAAmB,EAAE,KAAnE;AAA0E,MAAA,IAAI,EAAEF;AAAhF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxCuBL,M;UACLN,W;;;KADKM,M","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Header from \"../Components/Header\";\nimport Searchcontainer from \"../Components/Searchcontainer\";\nimport SideheaderandContainer from \"../Components/SideheaderandContainer\";\nimport axios from \"axios\";\n\n// export const API_KEY = \"AIzaSyAxKOdWEkF7FPBZUSumtCTjbjHQxhwesYc\";\nimport { API_KEY } from \"../Components/Header\";\n\nexport default function Search({videoId}) {\n  const location = useLocation();\n  //returns the location to any component\n  //To get the second argument we pass with useNavigate\n  const searchQuery = location.state.searchQuery;\n\n  const [data, setData] = useState([]); //data we get after search\n\n\n\nconst fetchSearchVideos = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchQuery}&videoId=${videoId}&maxResults=200&key=${API_KEY}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        setData(res.data.items);\n        console.log(res.data.items);\n        //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      })\n      .catch((error) => {\n        console.log(error);\n        // alert(error.response.data.error.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchSearchVideos();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Header />\n      <SideheaderandContainer  hideContainer={true} hideSearchcontainer={false} data={data} />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}