{"ast":null,"code":"import _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Videoplayercontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../../Key\";\nimport \"./index.css\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videoplayercontainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var videoId = _ref.videoId,\n      videoInfo = _ref.videoInfo;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var fetchComments = function fetchComments() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=\".concat(videoId, \"&key=\").concat(API_KEY),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      setComments(res.data.items);\n      console.log(JSON.stringify(res.data)); //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  };\n\n  useEffect(function () {\n    fetchComments();\n  }, []);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      recommendVideo = _useState4[0],\n      setRecommendVideo = _useState4[1];\n\n  var fetchRecommendVideos = function fetchRecommendVideos() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/search?part=snippet&type=video&relatedToVideoId=\".concat(videoId, \"&videoType=any&maxResults=50&key=\").concat(API_KEY, \"&videoId=\").concat(videoId),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      setRecommendVideo(res.data.items); //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  };\n\n  useEffect(function () {\n    fetchRecommendVideos();\n  }, []);\n  var navigate = useNavigate();\n\n  var navigateToPlayThisVideo = function navigateToPlayThisVideo(video) {\n    navigate(\"/player/\".concat(video.id.videoId), {\n      state: {\n        isSearch: true,\n        video: video\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videoPlayerContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchAndCommentsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playingVideo\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: \"Youtube Video Play\",\n          width: \"980\",\n          height: \"500\",\n          frameBorder: \"0\",\n          allowFullScreen: true,\n          allow: \"autoplay\",\n          src: \"https://www.youtube.com/embed/\".concat(videoId, \"?autoplay=1\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"playingVideoInfo\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"playingVideoTitle\",\n            children: videoInfo.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentsColumn\",\n        children: comments.map(function (video, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"authorNameAndCommentAndProfileImage\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"authorProfileImage\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.snippet.topLevelComment.snippet.authorProfileImageUrl,\n                alt: video.snippet.topLevelComment.snippet.authorDisplayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"authorNameAndCommentAndLikes\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"authorDisplayName\",\n                children: video.snippet.topLevelComment.snippet.authorDisplayName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"comment\",\n                children: video.snippet.topLevelComment.snippet.textOriginal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"likeOnCounts\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"likeCount\",\n                  children: [/*#__PURE__*/_jsxDEV(AiOutlineLike, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 23\n                  }, _this), \" \", video.snippet.topLevelComment.snippet.likeCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendVideosContainer\",\n      children: recommendVideo.map(function (video, index) {\n        var _video$snippet, _video$snippet2, _video$snippet3;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recommendVideosDisplay\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendedVideoThumbnail\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : _video$snippet.thumbnails.medium.url,\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recommendedVideoInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: (_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : _video$snippet2.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"channelName\",\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video);\n              },\n              children: (_video$snippet3 = video.snippet) === null || _video$snippet3 === void 0 ? void 0 : _video$snippet3.channelTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Videoplayercontainer, \"nGtwZb5/B4hBg7xRZg2FEtv7++Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Videoplayercontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videoplayercontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Videoplayercontainer/index.js"],"names":["React","useEffect","useState","axios","API_KEY","AiOutlineLike","useNavigate","Videoplayercontainer","videoId","videoInfo","comments","setComments","fetchComments","method","url","headers","Accept","then","res","data","items","console","log","JSON","stringify","catch","error","recommendVideo","setRecommendVideo","fetchRecommendVideos","navigate","navigateToPlayThisVideo","video","id","state","isSearch","snippet","title","map","index","topLevelComment","authorProfileImageUrl","authorDisplayName","textOriginal","likeCount","thumbnails","medium","channelTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../../Key\";\n\nimport \"./index.css\";\nimport { AiOutlineLike } from \"react-icons/ai\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Videoplayercontainer({ videoId, videoInfo }) {\n  const [comments, setComments] = useState([]);\n  const fetchComments = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/commentThreads?part=snippet&videoId=${videoId}&key=${API_KEY}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        setComments(res.data.items);\n        console.log(JSON.stringify(res.data));\n        //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      })\n      .catch((error) => {\n        console.log(error);\n        // alert(error.response.data.error.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const [recommendVideo, setRecommendVideo] = useState([]);\n  const fetchRecommendVideos = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&type=video&relatedToVideoId=${videoId}&videoType=any&maxResults=50&key=${API_KEY}&videoId=${videoId}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        setRecommendVideo(res.data.items);\n        //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      })\n      .catch((error) => {\n        console.log(error);\n        // alert(error.response.data.error.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchRecommendVideos();\n  }, []);\n\n  const navigate = useNavigate();\n\n  const navigateToPlayThisVideo = (video) => {\n    navigate(`/player/${video.id.videoId}`, {\n      state: {\n        isSearch: true,\n        video,\n      },\n    });\n  };\n\n  return (\n    <div className=\"videoPlayerContainer\">\n      <div className=\"watchAndCommentsContainer\">\n        <div className=\"playingVideo\">\n          <iframe\n            title=\"Youtube Video Play\"\n            width=\"980\"\n            height=\"500\"\n            frameBorder=\"0\"\n            allowFullScreen\n            allow=\"autoplay\"\n            src={`https://www.youtube.com/embed/${videoId}?autoplay=1`}\n          ></iframe>\n          <div className=\"playingVideoInfo\">\n            <h6 className=\"playingVideoTitle\">{videoInfo.snippet.title}</h6>\n          </div>\n          <hr></hr>\n        </div>\n\n        <div className=\"commentsColumn\">\n          {comments.map((video, index) => {\n            return (\n              <div key={index} className=\"authorNameAndCommentAndProfileImage\">\n                <div className=\"authorProfileImage\">\n                  <img\n                    src={\n                      video.snippet.topLevelComment.snippet\n                        .authorProfileImageUrl\n                    }\n                    alt={\n                      video.snippet.topLevelComment.snippet.authorDisplayName\n                    }\n                  />\n                </div>\n                <div className=\"authorNameAndCommentAndLikes\">\n                  <h6 className=\"authorDisplayName\">\n                    {video.snippet.topLevelComment.snippet.authorDisplayName}\n                  </h6>\n\n                  <p className=\"comment\">\n                    {video.snippet.topLevelComment.snippet.textOriginal}\n                  </p>\n                  <div className=\"likeOnCounts\">\n                    <p className=\"likeCount\">\n                      <AiOutlineLike />{\" \"}\n                      {video.snippet.topLevelComment.snippet.likeCount}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"recommendVideosContainer\">\n        {recommendVideo.map((video, index) => {\n          return (\n            <div key={index} className=\"recommendVideosDisplay\">\n              <div className=\"recommendedVideoThumbnail\">\n                <img\n                  src={video.snippet?.thumbnails.medium.url}\n                  onClick={() => navigateToPlayThisVideo(video)}\n                />\n                {/* (why question mark used ?) (ternary operator) snippet will check if there is thumbnail then go further otherwise don't show error show blank */}\n              </div>\n              <div className=\"recommendedVideoInfo\">\n                <h6>{video.snippet?.title}</h6>\n                <p\n                  className=\"channelName\"\n                  onClick={() => navigateToPlayThisVideo(video)}\n                >\n                  {video.snippet?.channelTitle}\n                </p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}