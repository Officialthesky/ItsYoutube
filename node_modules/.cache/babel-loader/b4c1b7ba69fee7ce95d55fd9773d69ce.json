{"ast":null,"code":"import _toConsumableArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Pages/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { API_KEY } from \"../Key\";\nimport Header from \"../Components/Header\";\nimport SideheaderandContainer from \"../Components/SideheaderandContainer\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  var location = useLocation(); //returns the location to any component\n  //To get the second argument we pass with useNavigate\n\n  var searchQuery = location.state.searchQuery;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; //data we get after search\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPageTokenForSearch = _useState4[0],\n      setNewPageTokenForSearch = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadMore = _useState6[0],\n      setLoadMore = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      minimizeSideHeader = _useState8[0],\n      setMinimizeSideHeader = _useState8[1];\n\n  var toggleSideBar = function toggleSideBar() {\n    setMinimizeSideHeader(!minimizeSideHeader);\n  };\n\n  var fetchSearchVideos = function fetchSearchVideos() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=\".concat(searchQuery, \"&maxResults=200&key=\").concat(API_KEY),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      setData(res.data.items);\n      setNewPageTokenForSearch(res.data.nextPageToken); //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  };\n\n  var fetchMoreSearchVideos = function fetchMoreSearchVideos() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=\".concat(searchQuery, \"&maxResults=200&pageToken=\").concat(newPageTokenForSearch, \"&key=\").concat(API_KEY),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      if (res.data.nextPageToken === undefined) {\n        setLoadMore(false);\n      }\n\n      var updatedMoreSearchVideos = [].concat(_toConsumableArray(data), _toConsumableArray(res.data.items));\n      setData(updatedMoreSearchVideos);\n      setNewPageTokenForSearch(res.data.nextPageToken); //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  };\n\n  useEffect(function () {\n    fetchSearchVideos();\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      toggleSideBar: toggleSideBar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideheaderandContainer, {\n      hideContainer: true,\n      hideSearchcontainer: false,\n      data: data,\n      minimizeSideHeader: minimizeSideHeader,\n      fetchMoreSearchVideos: fetchMoreSearchVideos,\n      loadMore: loadMore,\n      searchQuery: searchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"QwDOlwJFaKw7l1060kGdyzOu1/Y=\", false, function () {\n  return [useLocation];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Pages/Search.js"],"names":["React","useEffect","useState","useLocation","API_KEY","Header","SideheaderandContainer","axios","Search","location","searchQuery","state","data","setData","newPageTokenForSearch","setNewPageTokenForSearch","loadMore","setLoadMore","minimizeSideHeader","setMinimizeSideHeader","toggleSideBar","fetchSearchVideos","method","url","headers","Accept","then","res","items","nextPageToken","catch","error","console","log","fetchMoreSearchVideos","undefined","updatedMoreSearchVideos"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { API_KEY } from \"../Key\";\nimport Header from \"../Components/Header\";\nimport SideheaderandContainer from \"../Components/SideheaderandContainer\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  const location = useLocation();\n  //returns the location to any component\n  //To get the second argument we pass with useNavigate\n  const searchQuery = location.state.searchQuery;\n  const [data, setData] = useState([]); //data we get after search\n  const [newPageTokenForSearch, setNewPageTokenForSearch] = useState(\"\");\n  const [loadMore, setLoadMore] = useState(true);\n  \n\n\n  const [minimizeSideHeader, setMinimizeSideHeader] = useState(true);\n  const toggleSideBar = () => {\n    setMinimizeSideHeader(!minimizeSideHeader);\n  };\n\n  const fetchSearchVideos = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchQuery}&maxResults=200&key=${API_KEY}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        setData(res.data.items);\n        setNewPageTokenForSearch(res.data.nextPageToken);\n        //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      })\n      .catch((error) => {\n        console.log(error);\n        // alert(error.response.data.error.message);\n      });\n  };\n\n  const fetchMoreSearchVideos = () => {\n    axios({\n      method: \"GET\",\n      url: `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=${searchQuery}&maxResults=200&pageToken=${newPageTokenForSearch}&key=${API_KEY}`,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\",\n      },\n    })\n      .then((res) => {\n        if (res.data.nextPageToken === undefined) {\n          setLoadMore(false);\n        }\n        const updatedMoreSearchVideos = [...data, ...res.data.items];\n        setData(updatedMoreSearchVideos);\n        setNewPageTokenForSearch(res.data.nextPageToken);\n\n        //   localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      })\n      .catch((error) => {\n        console.log(error);\n        // alert(error.response.data.error.message);\n      });\n  };\n\n  useEffect(() => {\n    fetchSearchVideos();\n  }, [searchQuery]);\n\n  return (\n    <React.Fragment>\n      <Header toggleSideBar={toggleSideBar}/>\n      <SideheaderandContainer\n        hideContainer={true}\n        hideSearchcontainer={false}\n        data={data}\n        minimizeSideHeader={minimizeSideHeader}\n        fetchMoreSearchVideos={fetchMoreSearchVideos}\n        loadMore={loadMore}\n        searchQuery={searchQuery}\n      />\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}