{"ast":null,"code":"import _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { videoPlayerInfo } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mainvideocontainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var selectedTag = _ref.selectedTag;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myFilteredData = _useState2[0],\n      setMyFilteredData = _useState2[1];\n\n  var fetchVideosFromLocalStorage = JSON.parse(localStorage.getItem(\"videos\"));\n  console.log(fetchVideosFromLocalStorage);\n  useEffect(function () {\n    // const fltData = videoPlayerInfo.filter(\n    //   (item, index) => item?.tag === selectedTag?.toLowerCase()\n    // );\n    // if (selectedTag === \"all\") {\n    //   setMyFilteredData(videoPlayerInfo);\n    // } else {\n    //   setMyFilteredData(fltData);\n    // }\n    setMyFilteredData(fetchVideosFromLocalStorage);\n  }, [fetchVideosFromLocalStorage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainVideoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoRow\",\n      children: myFilteredData === null || myFilteredData === void 0 ? void 0 : myFilteredData.map(function (video, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videoPlayer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.snippet.thumbnails.medium.url,\n              alt: video.snippet.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"channelLogoAndInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelLogo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"video-logo\",\n                src: video.logo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelDescription\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: video.snippet.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelName\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: video.snippet.channelTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"viewsAndUploadTime\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" . \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"uploadTime\",\n                  children: video.Uploadtime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mainvideocontainer, \"ljGGEGLKvOh5NdRAuW3Gq+IEONc=\");\n\n_c = Mainvideocontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainvideocontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js"],"names":["React","useState","useEffect","videoPlayerInfo","Mainvideocontainer","selectedTag","myFilteredData","setMyFilteredData","fetchVideosFromLocalStorage","JSON","parse","localStorage","getItem","console","log","map","video","index","snippet","thumbnails","medium","url","title","logo","channelTitle","Uploadtime"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,eAAT,QAAgC,QAAhC;;AAEA,eAAe,SAASC,kBAAT,OAA6C;AAAA;;AAAA;;AAAA,MAAfC,WAAe,QAAfA,WAAe;;AAC1D,kBAA4CJ,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOK,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,2BAA2B,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,2BAAZ;AACAN,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,IAAAA,iBAAiB,CAACC,2BAAD,CAAjB;AACD,GAXQ,EAWN,CAACA,2BAAD,CAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGF,cADH,aACGA,cADH,uBACGA,cAAc,CAAES,GAAhB,CAAoB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACrC,4BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACA;AACI,cAAA,GAAG,EAAED,KAAK,CAACE,OAAN,CAAcC,UAAd,CAAyBC,MAAzB,CAAgCC,GADzC;AAEI,cAAA,GAAG,EAAEL,KAAK,CAACE,OAAN,CAAcI;AAFvB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,mBADF,eAOE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,qCACE;AAAK,gBAAA,GAAG,EAAC,YAAT;AAAsB,gBAAA,GAAG,EAAEN,KAAK,CAACO;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE;AAAK,cAAA,SAAS,EAAC,aAAf;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,uCACE;AAAA,4BAAIP,KAAK,CAACE,OAAN,CAAcI;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,uCACE;AAAA,4BAAIN,KAAK,CAACE,OAAN,CAAcM;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAJF,eAOE;AAAK,gBAAA,SAAS,EAAC,oBAAf;AAAA,wCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAGE;AAAG,kBAAA,SAAS,EAAC,YAAb;AAAA,4BAA2BR,KAAK,CAACS;AAAjC;AAAA;AAAA;AAAA;AAAA,yBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF;AAAA,WAAgCR,KAAhC;AAAA;AAAA;AAAA;AAAA,iBADF;AA6BD,OA9BA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAxDuBb,kB;;KAAAA,kB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { videoPlayerInfo } from \"./data\";\r\n\r\nexport default function Mainvideocontainer({ selectedTag }) {\r\n  const [myFilteredData, setMyFilteredData] = useState([]);\r\n\r\n  const fetchVideosFromLocalStorage = JSON.parse(localStorage.getItem(\"videos\")) ;\r\n  console.log(fetchVideosFromLocalStorage);\r\n  useEffect(() => {\r\n    // const fltData = videoPlayerInfo.filter(\r\n    //   (item, index) => item?.tag === selectedTag?.toLowerCase()\r\n    // );\r\n    // if (selectedTag === \"all\") {\r\n    //   setMyFilteredData(videoPlayerInfo);\r\n    // } else {\r\n    //   setMyFilteredData(fltData);\r\n    // }\r\n\r\n    setMyFilteredData(fetchVideosFromLocalStorage)\r\n  }, [fetchVideosFromLocalStorage]);\r\n\r\n  return (\r\n    <div className=\"mainVideoContainer\">\r\n      <hr></hr>\r\n      <div className=\"videoRow\">\r\n        {myFilteredData?.map((video, index) => {\r\n          return (\r\n            <div className=\"videoInfo\" key={index}>\r\n              <div className=\"videoPlayer\">\r\n              <img\r\n                  src={video.snippet.thumbnails.medium.url}\r\n                  alt={video.snippet.title}\r\n                />\r\n              </div>\r\n              <div className=\"channelLogoAndInfo\">\r\n                <div className=\"channelLogo\">\r\n                  <img alt=\"video-logo\" src={video.logo} />\r\n                </div>\r\n                <div className=\"channelInfo\">\r\n                  <div className=\"channelDescription\">\r\n                    <p>{video.snippet.title}</p>\r\n                  </div>\r\n                  <div className=\"channelName\">\r\n                    <p>{video.snippet.channelTitle}</p>\r\n                  </div>\r\n                  <div className=\"viewsAndUploadTime\">\r\n                    {/* <p className=\"views\">{video.statistics.viewCount}</p> */}\r\n                    <span> . </span>\r\n                    <p className=\"uploadTime\">{video.Uploadtime}</p>\r\n                  </div>\r\n                  {/* <p style={{ color: \"red\" }}>{video.tag}</p> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}