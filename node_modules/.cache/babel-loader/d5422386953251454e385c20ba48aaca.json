{"ast":null,"code":"import _toConsumableArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/theskymac/Desktop/Youtubeclone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { API_KEY } from \"../../Key\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mainvideocontainer(_ref) {\n  _s();\n\n  var _this = this;\n\n  var searchQuery = _ref.searchQuery;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      myFilteredData = _useState2[0],\n      setMyFilteredData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPageTokenForHome = _useState4[0],\n      setNewPageTokenForHome = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadMore = _useState6[0],\n      setLoadMore = _useState6[1];\n\n  useEffect(function () {\n    var fetchVideosInstart = function fetchVideosInstart() {\n      axios({\n        method: \"GET\",\n        url: \"https://youtube.googleapis.com/youtube/v3/videos?q=\".concat(searchQuery, \"&part=snippet&maxResults=200&regionCode=IN&chart=mostPopular&key=\").concat(API_KEY),\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (res) {\n        if (res.data.nextPageToken === undefined) {\n          setLoadMore(false);\n        }\n\n        setMyFilteredData(res.data.items);\n        setNewPageTokenForHome(res.data.nextPageToken);\n      }).catch(function (error) {\n        console.log(error); // alert(error.response.data.error.message);\n      });\n    };\n\n    fetchVideosInstart();\n  }, []);\n\n  var fetchMoreVideosInstart = function fetchMoreVideosInstart() {\n    axios({\n      method: \"GET\",\n      url: \"https://youtube.googleapis.com/youtube/v3/videos?q=\".concat(searchQuery, \"&part=snippet&maxResults=200&pageToken=\").concat(newPageTokenForHome, \"&regionCode=IN&chart=mostPopular&key=\").concat(API_KEY),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (res) {\n      // localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\n      var updatedMoreSearchVideos = [].concat(_toConsumableArray(myFilteredData), _toConsumableArray(res.data.items));\n      setMyFilteredData(updatedMoreSearchVideos);\n      setNewPageTokenForHome(res.data.nextPageToken);\n    }).catch(function (error) {\n      console.log(error); // alert(error.response.data.error.message);\n    });\n  }; // // const fetchVideosFromLocalStorage = JSON.parse(\n  // //   localStorage.getItem(\"videos\")\n  // );\n  // useEffect(() => {\n  //   setMyFilteredData(fetchVideosFromLocalStorage);\n  // }, [fetchVideosFromLocalStorage]);\n\n\n  var navigate = useNavigate();\n\n  var navigateToPlayThisVideo = function navigateToPlayThisVideo(video) {\n    navigate(\"/player/\".concat(video.id), {\n      state: {\n        isSearch: false,\n        video: video\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainVideoContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videoRow\",\n      children: myFilteredData === null || myFilteredData === void 0 ? void 0 : myFilteredData.map(function (video, index) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videoInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"videoPlayer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: video.snippet.thumbnails.medium.url,\n              alt: video.snippet.title,\n              onClick: function onClick() {\n                return navigateToPlayThisVideo(video);\n              } // we need whole thing about video so passing video\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"channelLogoAndInfo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelLogo\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: video.snippet.thumbnails.medium.url,\n                alt: video.snippet.channelTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"channelInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelDescription\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: function onClick() {\n                    return navigateToPlayThisVideo(video);\n                  },\n                  children: video.snippet.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"channelName\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: video.snippet.channelTitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"viewsAndUploadTime\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \" . \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, _this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mainvideocontainer, \"nTvp5OdzChZ1VoLiwxTuIvYB0I0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Mainvideocontainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainvideocontainer\");","map":{"version":3,"sources":["/Users/theskymac/Desktop/Youtubeclone/src/Components/Mainvideocontainer/index.js"],"names":["React","useState","useEffect","useNavigate","axios","API_KEY","InfiniteScroll","Mainvideocontainer","searchQuery","myFilteredData","setMyFilteredData","newPageTokenForHome","setNewPageTokenForHome","loadMore","setLoadMore","fetchVideosInstart","method","url","headers","Accept","then","res","data","nextPageToken","undefined","items","catch","error","console","log","fetchMoreVideosInstart","updatedMoreSearchVideos","navigate","navigateToPlayThisVideo","video","id","state","isSearch","map","index","snippet","thumbnails","medium","title","channelTitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { API_KEY } from \"../../Key\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nexport default function Mainvideocontainer({ searchQuery }) {\r\n  const [myFilteredData, setMyFilteredData] = useState([]);\r\n  const [newPageTokenForHome, setNewPageTokenForHome] = useState(\"\");\r\n  const [loadMore, setLoadMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchVideosInstart = () => {\r\n      axios({\r\n        method: \"GET\",\r\n        url: `https://youtube.googleapis.com/youtube/v3/videos?q=${searchQuery}&part=snippet&maxResults=200&regionCode=IN&chart=mostPopular&key=${API_KEY}`,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          if (res.data.nextPageToken === undefined) {\r\n            setLoadMore(false);\r\n          }\r\n          setMyFilteredData(res.data.items);\r\n          setNewPageTokenForHome(res.data.nextPageToken);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          // alert(error.response.data.error.message);\r\n        });\r\n    };\r\n    fetchVideosInstart();\r\n  }, []);\r\n\r\n  const fetchMoreVideosInstart = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://youtube.googleapis.com/youtube/v3/videos?q=${searchQuery}&part=snippet&maxResults=200&pageToken=${newPageTokenForHome}&regionCode=IN&chart=mostPopular&key=${API_KEY}`,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        // localStorage.setItem(\"videos\", JSON.stringify(res.data.items));\r\n        const updatedMoreSearchVideos = [...myFilteredData, ...res.data.items];\r\n        setMyFilteredData(updatedMoreSearchVideos);\r\n        setNewPageTokenForHome(res.data.nextPageToken);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // alert(error.response.data.error.message);\r\n      });\r\n  };\r\n\r\n  // // const fetchVideosFromLocalStorage = JSON.parse(\r\n  // //   localStorage.getItem(\"videos\")\r\n  // );\r\n\r\n  // useEffect(() => {\r\n  //   setMyFilteredData(fetchVideosFromLocalStorage);\r\n  // }, [fetchVideosFromLocalStorage]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const navigateToPlayThisVideo = (video) => {\r\n    navigate(`/player/${video.id}`, {\r\n      state: {\r\n        isSearch: false,\r\n        video,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mainVideoContainer\">\r\n      <hr></hr>\r\n      <div className=\"videoRow\">\r\n       \r\n          {myFilteredData?.map((video, index) => {\r\n            return (\r\n              <div className=\"videoInfo\" key={index}>\r\n                <div className=\"videoPlayer\">\r\n                  <img\r\n                    src={video.snippet.thumbnails.medium.url}\r\n                    alt={video.snippet.title}\r\n                    onClick={() => navigateToPlayThisVideo(video)}\r\n                    // we need whole thing about video so passing video\r\n                  />\r\n                </div>\r\n                <div className=\"channelLogoAndInfo\">\r\n                  <div className=\"channelLogo\">\r\n                    <img\r\n                      src={video.snippet.thumbnails.medium.url}\r\n                      alt={video.snippet.channelTitle}\r\n                    />\r\n                  </div>\r\n                  <div className=\"channelInfo\">\r\n                    <div className=\"channelDescription\">\r\n                      <p onClick={() => navigateToPlayThisVideo(video)}>\r\n                        {video.snippet.title}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"channelName\">\r\n                      <p>{video.snippet.channelTitle}</p>\r\n                    </div>\r\n                    <div className=\"viewsAndUploadTime\">\r\n                      {/* <p className=\"views\">{video.snippet.videoId}</p> */}\r\n                      <span> . </span>\r\n                      {/* <p className=\"uploadTime\">{video.snippet.videoId}</p> */}\r\n                    </div>\r\n                    {/* <p style={{ color: \"red\" }}>{video.tag}</p> */}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}